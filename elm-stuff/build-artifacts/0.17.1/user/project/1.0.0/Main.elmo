var _user$project$Main$nextRandomNumber = function (seed) {
	return A2(
		_elm_lang$core$Random$step,
		A2(_elm_lang$core$Random$int, 0, 100),
		seed);
};
var _user$project$Main$messageFromGuessAndTarget = F2(
	function (guess, target) {
		return _elm_lang$core$Native_Utils.eq(guess, target) ? A2(
			_elm_lang$core$Basics_ops['++'],
			'You won! ',
			_elm_lang$core$Basics$toString(guess)) : ((_elm_lang$core$Native_Utils.cmp(guess, target) < 0) ? A2(
			_elm_lang$core$Basics_ops['++'],
			'You guessed ',
			A2(
				_elm_lang$core$Basics_ops['++'],
				_elm_lang$core$Basics$toString(guess),
				', but it was too low.')) : A2(
			_elm_lang$core$Basics_ops['++'],
			'You guessed ',
			A2(
				_elm_lang$core$Basics_ops['++'],
				_elm_lang$core$Basics$toString(guess),
				', but it was too high.')));
	});
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		if (_p0.ctor === 'Guess') {
			var _p1 = _elm_lang$core$String$toInt(_p0._0);
			if (_p1.ctor === 'Ok') {
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						guess: _elm_lang$core$Maybe$Just(_p1._0)
					});
			} else {
				return model;
			}
		} else {
			var _p2 = _user$project$Main$nextRandomNumber(model.seed);
			var newTargetNumber = _p2._0;
			var newSeed = _p2._1;
			return {seed: newSeed, targetNumber: newTargetNumber, guess: _elm_lang$core$Maybe$Nothing};
		}
	});
var _user$project$Main$Model = F3(
	function (a, b, c) {
		return {seed: a, targetNumber: b, guess: c};
	});
var _user$project$Main$Reset = {ctor: 'Reset'};
var _user$project$Main$Guess = function (a) {
	return {ctor: 'Guess', _0: a};
};
var _user$project$Main$view = function (model) {
	var _p3 = function () {
		var _p4 = model.guess;
		if (_p4.ctor === 'Just') {
			var _p5 = _p4._0;
			return {
				ctor: '_Tuple2',
				_0: A2(_user$project$Main$messageFromGuessAndTarget, _p5, model.targetNumber),
				_1: _elm_lang$core$Basics$toString(_p5)
			};
		} else {
			return {ctor: '_Tuple2', _0: 'Make a guess!', _1: ''};
		}
	}();
	var messageText = _p3._0;
	var inputText = _p3._1;
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text(messageText)
					])),
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$input,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Attributes$placeholder('Enter number'),
								_elm_lang$html$Html_Attributes$value(inputText),
								_elm_lang$html$Html_Events$onInput(_user$project$Main$Guess)
							]),
						_elm_lang$core$Native_List.fromArray(
							[]))
					])),
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						A2(
						_elm_lang$html$Html$button,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html_Events$onClick(_user$project$Main$Reset)
							]),
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$html$Html$text('Reset')
							]))
					]))
			]));
};
var _user$project$Main$main = {
	main: function () {
		var _p6 = _user$project$Main$nextRandomNumber(
			_elm_lang$core$Random$initialSeed(1));
		var randomNumber = _p6._0;
		var seed = _p6._1;
		return _elm_lang$html$Html_App$beginnerProgram(
			{
				model: {seed: seed, targetNumber: randomNumber, guess: _elm_lang$core$Maybe$Nothing},
				view: _user$project$Main$view,
				update: _user$project$Main$update
			});
	}()
};
